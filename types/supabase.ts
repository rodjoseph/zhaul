/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/bookings": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.bookings.id"];
          start?: parameters["rowFilter.bookings.start"];
          end?: parameters["rowFilter.bookings.end"];
          truck?: parameters["rowFilter.bookings.truck"];
          user?: parameters["rowFilter.bookings.user"];
          created_at?: parameters["rowFilter.bookings.created_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["bookings"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** bookings */
          bookings?: definitions["bookings"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.bookings.id"];
          start?: parameters["rowFilter.bookings.start"];
          end?: parameters["rowFilter.bookings.end"];
          truck?: parameters["rowFilter.bookings.truck"];
          user?: parameters["rowFilter.bookings.user"];
          created_at?: parameters["rowFilter.bookings.created_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.bookings.id"];
          start?: parameters["rowFilter.bookings.start"];
          end?: parameters["rowFilter.bookings.end"];
          truck?: parameters["rowFilter.bookings.truck"];
          user?: parameters["rowFilter.bookings.user"];
          created_at?: parameters["rowFilter.bookings.created_at"];
        };
        body: {
          /** bookings */
          bookings?: definitions["bookings"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/bookingsview": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.bookingsview.id"];
          start?: parameters["rowFilter.bookingsview.start"];
          end?: parameters["rowFilter.bookingsview.end"];
          truck?: parameters["rowFilter.bookingsview.truck"];
          vin?: parameters["rowFilter.bookingsview.vin"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["bookingsview"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
  };
  "/customerinfo": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.customerinfo.id"];
          updated_at?: parameters["rowFilter.customerinfo.updated_at"];
          username?: parameters["rowFilter.customerinfo.username"];
          avatar_url?: parameters["rowFilter.customerinfo.avatar_url"];
          name?: parameters["rowFilter.customerinfo.name"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["customerinfo"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** customerinfo */
          customerinfo?: definitions["customerinfo"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.customerinfo.id"];
          updated_at?: parameters["rowFilter.customerinfo.updated_at"];
          username?: parameters["rowFilter.customerinfo.username"];
          avatar_url?: parameters["rowFilter.customerinfo.avatar_url"];
          name?: parameters["rowFilter.customerinfo.name"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.customerinfo.id"];
          updated_at?: parameters["rowFilter.customerinfo.updated_at"];
          username?: parameters["rowFilter.customerinfo.username"];
          avatar_url?: parameters["rowFilter.customerinfo.avatar_url"];
          name?: parameters["rowFilter.customerinfo.name"];
        };
        body: {
          /** customerinfo */
          customerinfo?: definitions["customerinfo"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/invoice": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.invoice.id"];
          booking?: parameters["rowFilter.invoice.booking"];
          amount?: parameters["rowFilter.invoice.amount"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["invoice"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** invoice */
          invoice?: definitions["invoice"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.invoice.id"];
          booking?: parameters["rowFilter.invoice.booking"];
          amount?: parameters["rowFilter.invoice.amount"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.invoice.id"];
          booking?: parameters["rowFilter.invoice.booking"];
          amount?: parameters["rowFilter.invoice.amount"];
        };
        body: {
          /** invoice */
          invoice?: definitions["invoice"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/profiles": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          updated_at?: parameters["rowFilter.profiles.updated_at"];
          username?: parameters["rowFilter.profiles.username"];
          avatar_url?: parameters["rowFilter.profiles.avatar_url"];
          website?: parameters["rowFilter.profiles.website"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["profiles"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** profiles */
          profiles?: definitions["profiles"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          updated_at?: parameters["rowFilter.profiles.updated_at"];
          username?: parameters["rowFilter.profiles.username"];
          avatar_url?: parameters["rowFilter.profiles.avatar_url"];
          website?: parameters["rowFilter.profiles.website"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          updated_at?: parameters["rowFilter.profiles.updated_at"];
          username?: parameters["rowFilter.profiles.username"];
          avatar_url?: parameters["rowFilter.profiles.avatar_url"];
          website?: parameters["rowFilter.profiles.website"];
        };
        body: {
          /** profiles */
          profiles?: definitions["profiles"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/trucks": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.trucks.id"];
          vin?: parameters["rowFilter.trucks.vin"];
          truck_size?: parameters["rowFilter.trucks.truck_size"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["trucks"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** trucks */
          trucks?: definitions["trucks"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.trucks.id"];
          vin?: parameters["rowFilter.trucks.vin"];
          truck_size?: parameters["rowFilter.trucks.truck_size"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.trucks.id"];
          vin?: parameters["rowFilter.trucks.vin"];
          truck_size?: parameters["rowFilter.trucks.truck_size"];
        };
        body: {
          /** trucks */
          trucks?: definitions["trucks"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/rpc/create_new_booking": {
    post: {
      parameters: {
        body: {
          args: {
            truck_type: number;
            end_datetime: string;
            user_id: string;
            start_datetime: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/get_available_trucks": {
    post: {
      parameters: {
        body: {
          args: {
            end_datetime: string;
            start_datetime: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/create_booking": {
    post: {
      parameters: {
        body: {
          args: {
            truck_type: number;
            end_datetime: string;
            user_id: string;
            start_datetime: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
}

export interface definitions {
  bookings: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    start: string;
    end: string;
    /**
     * Note:
     * This is a Foreign Key to `trucks.id`.<fk table='trucks' column='id'/>
     */
    truck: number;
    user?: string;
    created_at: string;
  };
  bookingsview: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id?: number;
    start?: string;
    end?: string;
    /**
     * Note:
     * This is a Foreign Key to `trucks.id`.<fk table='trucks' column='id'/>
     */
    truck?: number;
    vin?: string;
  };
  customerinfo: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    updated_at?: string;
    username?: string;
    avatar_url?: string;
    name: string;
  };
  invoice: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Note:
     * This is a Foreign Key to `trucks.id`.<fk table='trucks' column='id'/>
     */
    booking: number;
    amount: number;
  };
  profiles: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    updated_at?: string;
    username?: string;
    avatar_url?: string;
    website?: string;
  };
  trucks: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    vin?: string;
    truck_size?: number;
  };
}

export interface parameters {
  /** Preference */
  preferParams: "params=single-object";
  /** Preference */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /** Preference */
  preferCount: "count=none";
  /** Filtering Columns */
  select: string;
  /** On Conflict */
  on_conflict: string;
  /** Ordering */
  order: string;
  /** Limiting and Pagination */
  range: string;
  /** Limiting and Pagination */
  rangeUnit: string;
  /** Limiting and Pagination */
  offset: string;
  /** Limiting and Pagination */
  limit: string;
  /** bookings */
  "body.bookings": definitions["bookings"];
  "rowFilter.bookings.id": string;
  "rowFilter.bookings.start": string;
  "rowFilter.bookings.end": string;
  "rowFilter.bookings.truck": string;
  "rowFilter.bookings.user": string;
  "rowFilter.bookings.created_at": string;
  /** bookingsview */
  "body.bookingsview": definitions["bookingsview"];
  "rowFilter.bookingsview.id": string;
  "rowFilter.bookingsview.start": string;
  "rowFilter.bookingsview.end": string;
  "rowFilter.bookingsview.truck": string;
  "rowFilter.bookingsview.vin": string;
  /** customerinfo */
  "body.customerinfo": definitions["customerinfo"];
  "rowFilter.customerinfo.id": string;
  "rowFilter.customerinfo.updated_at": string;
  "rowFilter.customerinfo.username": string;
  "rowFilter.customerinfo.avatar_url": string;
  "rowFilter.customerinfo.name": string;
  /** invoice */
  "body.invoice": definitions["invoice"];
  "rowFilter.invoice.id": string;
  "rowFilter.invoice.booking": string;
  "rowFilter.invoice.amount": string;
  /** profiles */
  "body.profiles": definitions["profiles"];
  "rowFilter.profiles.id": string;
  "rowFilter.profiles.updated_at": string;
  "rowFilter.profiles.username": string;
  "rowFilter.profiles.avatar_url": string;
  "rowFilter.profiles.website": string;
  /** trucks */
  "body.trucks": definitions["trucks"];
  "rowFilter.trucks.id": string;
  "rowFilter.trucks.vin": string;
  "rowFilter.trucks.truck_size": string;
}

export interface operations {}

export interface external {}
